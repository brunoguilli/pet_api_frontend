[{"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/index.js":"1","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/App.jsx":"2","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/ownerForm.jsx":"3","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/Header.jsx":"4","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerForm.jsx":"5","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerComponent.jsx":"6","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerList.jsx":"7","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/index.js":"8","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/App.jsx":"9","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerList.jsx":"10","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerComponent.jsx":"11","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerForm.jsx":"12","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Header.jsx":"13","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Footer.jsx":"14","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetComponent.jsx":"15","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetForm.jsx":"16","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetList.jsx":"17","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerComponent.jsx":"18","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerForm.jsx":"19","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerList.jsx":"20"},{"size":306,"mtime":1625019438492,"results":"21","hashOfConfig":"22"},{"size":1802,"mtime":1625020614953,"results":"23","hashOfConfig":"22"},{"size":1377,"mtime":1625007659085,"results":"24","hashOfConfig":"22"},{"size":798,"mtime":1625019769148,"results":"25","hashOfConfig":"22"},{"size":1426,"mtime":1625011911011,"results":"26","hashOfConfig":"22"},{"size":3162,"mtime":1625013371976,"results":"27","hashOfConfig":"22"},{"size":1595,"mtime":1625081834264,"results":"28","hashOfConfig":"22"},{"size":306,"mtime":1625019438492,"results":"29","hashOfConfig":"30"},{"size":233,"mtime":1625499409957,"results":"31","hashOfConfig":"30"},{"size":4373,"mtime":1625445658430,"results":"32","hashOfConfig":"30"},{"size":2248,"mtime":1625443077296,"results":"33","hashOfConfig":"30"},{"size":4848,"mtime":1625540198276,"results":"34","hashOfConfig":"30"},{"size":2168,"mtime":1625539700183,"results":"35","hashOfConfig":"30"},{"size":124,"mtime":1625443002317,"results":"36","hashOfConfig":"30"},{"size":2212,"mtime":1625445865379,"results":"37","hashOfConfig":"30"},{"size":4606,"mtime":1625569600270,"results":"38","hashOfConfig":"30"},{"size":5013,"mtime":1625536971599,"results":"39","hashOfConfig":"30"},{"size":2628,"mtime":1625538869114,"results":"40","hashOfConfig":"30"},{"size":3034,"mtime":1625540262759,"results":"41","hashOfConfig":"30"},{"size":1404,"mtime":1625538974313,"results":"42","hashOfConfig":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"osrkye",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1fdqf9h",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/index.js",[],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/App.jsx",["89"],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/ownerForm.jsx",[],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/Header.jsx",[],["90","91"],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerForm.jsx",[],["92","93"],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerComponent.jsx",[],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerList.jsx",["94"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/index.js",[],["95","96"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/App.jsx",[],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerList.jsx",["97","98","99","100"],"import React, { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-modal\";\nimport \"./Dialog.css\";\nimport OwnerForm from \"./OwnerForm\";\n\nconst OwnerList = ({ owners, updateOwner, deleteOwner, getOwnerByCpf }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [ownerName, setOwnerName] = useState(\"\");\n  const [ownerCpf, setOwnerCpf] = useState(\"\");\n  const [ownerData, setOwnerData] = useState(\"\");\n  const [ownerSexo, setOwnerSexo] = useState(\"\");\n  const [checkedMale, setCheckedMale] = useState(false);\n  const [checkedFemale, setCheckedFemale] = useState(false);\n\n  const setOwnerValues = (value) => {\n    setOwnerName(value.nome);\n    setOwnerCpf(value.cpf);\n    var date = new Date(value.data_nascimento);\n    var formattedDate = format(date, \"yyyy-MM-dd\");\n    setOwnerData(formattedDate);\n    setOwnerSexo(value.sexo);\n    if (value.sexo == \"M\") {\n      setCheckedMale(true);\n      setCheckedFemale(false);\n    } else {\n      setCheckedFemale(true);\n      setCheckedMale(false);\n    }\n  };\n\n  const handleGetOwnerByCpf = () => {\n    getOwnerByCpf(ownerCpf);\n  };\n\n  let bg = \"bg-light\";\n  let cont = 0;\n\n  return (\n    <Container>\n      <Modal className=\"custom-dialog\" isOpen={modalIsOpen}>\n        <Container className=\"container-dialog\">\n          <h3 style={{textAlign:\"center\", fontSize: 22}}>Alterar Registro</h3>\n          <OwnerForm\n            ownerNameUpdate={ownerName}\n            ownerCpfUpdate={ownerCpf}\n            ownerDataUpdate={ownerData}\n            ownerSexoUpdate={ownerSexo}\n            checkedMale={checkedMale}\n            checkedFemale={checkedFemale}\n            operationType={\"Atualizar\"}\n            updateOwner={updateOwner}\n          />\n\n          <a className=\"link\"\n            class=\"fas fa-times text-danger ml-3 mb-1\"\n            style={{ height: 50, fontSize: 40 }}\n            onClick={() => setModalIsOpen(false)}\n          ></a>\n        </Container>\n      </Modal>\n\n      <Container>\n        <Row className=\"mb-5\">\n          <input\n            type=\"text\"\n            style={{ width: \"30%\" }}\n            className=\"ml-0\"\n            placeholder=\"Informe o CPF\"\n            onChange={(e) => {\n              setOwnerCpf(e.target.value);\n            }}\n          />\n          <Button variant=\"white\" onClick={handleGetOwnerByCpf}>\n            <i class=\"fas fa-search text-info\"></i>\n          </Button>\n        </Row>\n      </Container>\n\n      <Row className=\"bg-light\">\n        <Col>\n          <p>Nome</p>\n        </Col>\n        <Col>\n          <p>CPF</p>\n        </Col>\n        <Col>\n          <p>Data Nascimento</p>\n        </Col>\n        <Col>\n          <p>Sexo</p>\n        </Col>\n        <Col>\n          <p>Deletar</p>\n        </Col>\n        <Col>\n          <p>Editar</p>\n        </Col>\n      </Row>\n\n      {owners.map((value) => {\n        cont++;\n        if (cont % 2 == 0) {\n          bg = \"bg-light\";\n        } else {\n          bg = \"bg-withe\";\n        }\n        var date = new Date(value.data_nascimento);\n        var formattedDate = format(date, \"dd/MM/yyyy\");\n\n        return (\n          <div className=\"form\">\n            <Row className={bg}>\n              <Col>\n                <p>{value.nome}</p>\n              </Col>\n              <Col>\n                <p>{value.cpf}</p>\n              </Col>\n              <Col>\n                <p>{formattedDate}</p>\n              </Col>\n              <Col>\n                <p>{value.sexo}</p>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => {\n                    deleteOwner(value.cpf);\n                  }}\n                >\n                  <i class=\"fas fa-trash-alt\"></i>\n                </Button>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"info\"\n                  onClick={() => {\n                    setModalIsOpen(true);\n                    setOwnerValues(value);\n                  }}\n                >\n                  <i class=\"fas fa-edit\"></i>\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default OwnerList;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerComponent.jsx",["101","102","103"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport OwnerList from \"./OwnerList\";\nimport OwnerForm from \"./OwnerForm\";\n\nconst OwnerComponent = () => {\n  const [ownerList, setOwnerList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n  const submitOwner = (name, cpf, data, sexo) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setOwnerList([\n      ...ownerList,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  const deleteOwner = (cpf) => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const getOwnerByCpf = (cpf) => {\n    console.log(\"cpf -> \" + cpf);\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter((owner) => owner.cpf == cpf);\n      setOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n        setOwnerList(response.data);\n      });\n    }\n  };\n\n  const updateOwner = (name, cpf, data, sexo) => {\n    Axios.put(`http://localhost:3000/v1/owners/${cpf}`, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner atualizado com sucesso!\");\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n    setOwnerList([\n      ...newOwners,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <OwnerForm\n        submitOwner={submitOwner}\n        updateOwner={updateOwner}\n        operationType={\"Cadastrar\"}\n      />\n      <OwnerList\n        owners={ownerList}\n        updateOwner={updateOwner}\n        deleteOwner={deleteOwner}\n        getOwnerByCpf={getOwnerByCpf}\n      />\n    </>\n  );\n};\n\nexport default OwnerComponent;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerForm.jsx",["104","105","106"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Header.jsx",[],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Footer.jsx",[],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetComponent.jsx",["107","108","109"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PetForm from \"./PetForm\";\nimport PetList from \"./PetList\";\n\nconst PetComponent = () => {\n  const [petList, setpetList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/pets\").then((response) => {\n      setpetList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,petsexo);\n  const submitPet = (name, tipoAnimal, data, sexo, raca) => {\n    Axios.post(\"http://localhost:3000/v1/pets\", {\n      tipo_animal: tipoAnimal,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n      raca: raca,\n    });\n\n    alert(\"Pet cadastrado com sucesso!\");\n\n    setpetList([\n      ...petList,\n      {\n        tipo_animal: tipoAnimal,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n        raca: raca,\n      },\n    ]);\n  };\n\n  const deletePet = (id) => {\n    Axios.delete(`http://localhost:3000/v1/pets/${id}`);\n\n    const newpets = petList.filter((pet) => pet.id != id);\n    setpetList(newpets);\n  };\n\n  const getPetById = (id) => {\n    if (!!id) {\n      const pet = petList.filter((pet) => pet.id == id);\n      setpetList(pet);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/pets\").then((response) => {\n        setpetList(response.data);\n      });\n    }\n  };\n\n  const updatePet = (id, name, data, sexo, tipoAnimal, raca) => {\n    Axios.put(`http://localhost:3000/v1/pets/${id}`, {\n      tipo_animal: tipoAnimal,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n      raca: raca,\n    });\n\n    alert(\"Pet atualizado com sucesso!\");\n    const newpets = petList.filter((pet) => pet.id != id);\n    setpetList(newpets);\n    setpetList([\n      ...newpets,\n      {\n        tipo_animal: tipoAnimal,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n        raca: raca,\n      },\n    ]);\n  };\n  return (\n    <>\n      <PetForm\n        submitPet={submitPet}\n        updatePet={updatePet}\n        operationType={\"Cadastrar\"}\n      />\n      <PetList\n        pets={petList}\n        updatePet={updatePet}\n        deletePet={deletePet}\n        getPetById={getPetById}\n      />\n    </>\n  );\n};\n\nexport default PetComponent;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetForm.jsx",["110","111","112","113"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetList.jsx",["114","115","116","117","118"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerComponent.jsx",["119","120","121","122"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerForm.jsx",["123","124","125","126"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerList.jsx",["127","128"],{"ruleId":"129","severity":1,"message":"130","line":50,"column":61,"nodeType":"131","messageId":"132","endLine":50,"endColumn":63},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"129","severity":1,"message":"139","line":32,"column":22,"nodeType":"131","messageId":"132","endLine":32,"endColumn":24},{"ruleId":"133","replacedBy":"140"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"129","severity":1,"message":"139","line":27,"column":20,"nodeType":"131","messageId":"132","endLine":27,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":59,"column":11,"nodeType":"144","endLine":63,"endColumn":12},{"ruleId":"145","severity":1,"message":"146","line":59,"column":11,"nodeType":"144","endLine":63,"endColumn":12},{"ruleId":"129","severity":1,"message":"139","line":107,"column":22,"nodeType":"131","messageId":"132","endLine":107,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":39,"column":61,"nodeType":"131","messageId":"132","endLine":39,"endColumn":63},{"ruleId":"129","severity":1,"message":"139","line":47,"column":59,"nodeType":"131","messageId":"132","endLine":47,"endColumn":61},{"ruleId":"129","severity":1,"message":"130","line":65,"column":61,"nodeType":"131","messageId":"132","endLine":65,"endColumn":63},{"ruleId":"147","severity":1,"message":"148","line":20,"column":21,"nodeType":"149","messageId":"150","endLine":20,"endColumn":37},{"ruleId":"129","severity":1,"message":"139","line":35,"column":19,"nodeType":"131","messageId":"132","endLine":35,"endColumn":21},{"ruleId":"129","severity":1,"message":"139","line":37,"column":26,"nodeType":"131","messageId":"132","endLine":37,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":41,"column":52,"nodeType":"131","messageId":"132","endLine":41,"endColumn":54},{"ruleId":"129","severity":1,"message":"139","line":47,"column":50,"nodeType":"131","messageId":"132","endLine":47,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":66,"column":52,"nodeType":"131","messageId":"132","endLine":66,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":20,"column":21,"nodeType":"149","messageId":"150","endLine":20,"endColumn":37},{"ruleId":"147","severity":1,"message":"151","line":25,"column":17,"nodeType":"149","messageId":"150","endLine":25,"endColumn":25},{"ruleId":"129","severity":1,"message":"139","line":38,"column":19,"nodeType":"131","messageId":"132","endLine":38,"endColumn":21},{"ruleId":"129","severity":1,"message":"139","line":40,"column":26,"nodeType":"131","messageId":"132","endLine":40,"endColumn":28},{"ruleId":"129","severity":1,"message":"139","line":31,"column":20,"nodeType":"131","messageId":"132","endLine":31,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":67,"column":11,"nodeType":"144","endLine":72,"endColumn":12},{"ruleId":"145","severity":1,"message":"146","line":67,"column":11,"nodeType":"144","endLine":72,"endColumn":12},{"ruleId":"129","severity":1,"message":"139","line":122,"column":22,"nodeType":"131","messageId":"132","endLine":122,"endColumn":24},{"ruleId":"129","severity":1,"message":"139","line":131,"column":30,"nodeType":"131","messageId":"132","endLine":131,"endColumn":32},{"ruleId":"129","severity":1,"message":"130","line":45,"column":72,"nodeType":"131","messageId":"132","endLine":45,"endColumn":74},{"ruleId":"147","severity":1,"message":"152","line":49,"column":9,"nodeType":"149","messageId":"150","endLine":49,"endColumn":22},{"ruleId":"129","severity":1,"message":"139","line":53,"column":62,"nodeType":"131","messageId":"132","endLine":53,"endColumn":64},{"ruleId":"129","severity":1,"message":"130","line":70,"column":74,"nodeType":"131","messageId":"132","endLine":70,"endColumn":76},{"ruleId":"147","severity":1,"message":"148","line":19,"column":21,"nodeType":"149","messageId":"150","endLine":19,"endColumn":37},{"ruleId":"147","severity":1,"message":"153","line":22,"column":22,"nodeType":"149","messageId":"150","endLine":22,"endColumn":35},{"ruleId":"129","severity":1,"message":"139","line":33,"column":19,"nodeType":"131","messageId":"132","endLine":33,"endColumn":21},{"ruleId":"129","severity":1,"message":"139","line":35,"column":26,"nodeType":"131","messageId":"132","endLine":35,"endColumn":28},{"ruleId":"147","severity":1,"message":"154","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"139","line":28,"column":22,"nodeType":"131","messageId":"132","endLine":28,"endColumn":24},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],"Expected '===' and instead saw '=='.",["155"],["156"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'setOperationType' is assigned a value but never used.","Identifier","unusedVar","'setPetId' is assigned a value but never used.","'getOwnerByCpf' is assigned a value but never used.","'setPetOwnerId' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]