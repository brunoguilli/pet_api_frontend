[{"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/index.js":"1","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/App.jsx":"2","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/ownerForm.jsx":"3","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/Header.jsx":"4","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerForm.jsx":"5","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerComponent.jsx":"6","/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerList.jsx":"7","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/index.js":"8","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/App.jsx":"9","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerList.jsx":"10","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerComponent.jsx":"11","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerForm.jsx":"12","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Header.jsx":"13","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Footer.jsx":"14","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetComponent.jsx":"15","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetForm.jsx":"16","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetList.jsx":"17"},{"size":306,"mtime":1625019438492,"results":"18","hashOfConfig":"19"},{"size":1802,"mtime":1625020614953,"results":"20","hashOfConfig":"19"},{"size":1377,"mtime":1625007659085,"results":"21","hashOfConfig":"19"},{"size":798,"mtime":1625019769148,"results":"22","hashOfConfig":"19"},{"size":1426,"mtime":1625011911011,"results":"23","hashOfConfig":"19"},{"size":3162,"mtime":1625013371976,"results":"24","hashOfConfig":"19"},{"size":1595,"mtime":1625081834264,"results":"25","hashOfConfig":"19"},{"size":306,"mtime":1625019438492,"results":"26","hashOfConfig":"27"},{"size":233,"mtime":1625446707369,"results":"28","hashOfConfig":"27"},{"size":4373,"mtime":1625445658430,"results":"29","hashOfConfig":"27"},{"size":2248,"mtime":1625443077296,"results":"30","hashOfConfig":"27"},{"size":4131,"mtime":1625451282972,"results":"31","hashOfConfig":"27"},{"size":1695,"mtime":1625451654336,"results":"32","hashOfConfig":"27"},{"size":124,"mtime":1625443002317,"results":"33","hashOfConfig":"27"},{"size":2212,"mtime":1625445865379,"results":"34","hashOfConfig":"27"},{"size":4958,"mtime":1625450066299,"results":"35","hashOfConfig":"27"},{"size":5013,"mtime":1625450564304,"results":"36","hashOfConfig":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"osrkye",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1fdqf9h",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"55"},"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/index.js",[],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/App.jsx",["79"],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/ownerForm.jsx",[],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/Header.jsx",[],["80","81"],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerForm.jsx",[],["82","83"],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerComponent.jsx",[],"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerList.jsx",["84"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/index.js",[],["85","86"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/App.jsx",[],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerList.jsx",["87","88","89","90"],"import React, { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-modal\";\nimport \"./Dialog.css\";\nimport OwnerForm from \"./OwnerForm\";\n\nconst OwnerList = ({ owners, updateOwner, deleteOwner, getOwnerByCpf }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [ownerName, setOwnerName] = useState(\"\");\n  const [ownerCpf, setOwnerCpf] = useState(\"\");\n  const [ownerData, setOwnerData] = useState(\"\");\n  const [ownerSexo, setOwnerSexo] = useState(\"\");\n  const [checkedMale, setCheckedMale] = useState(false);\n  const [checkedFemale, setCheckedFemale] = useState(false);\n\n  const setOwnerValues = (value) => {\n    setOwnerName(value.nome);\n    setOwnerCpf(value.cpf);\n    var date = new Date(value.data_nascimento);\n    var formattedDate = format(date, \"yyyy-MM-dd\");\n    setOwnerData(formattedDate);\n    setOwnerSexo(value.sexo);\n    if (value.sexo == \"M\") {\n      setCheckedMale(true);\n      setCheckedFemale(false);\n    } else {\n      setCheckedFemale(true);\n      setCheckedMale(false);\n    }\n  };\n\n  const handleGetOwnerByCpf = () => {\n    getOwnerByCpf(ownerCpf);\n  };\n\n  let bg = \"bg-light\";\n  let cont = 0;\n\n  return (\n    <Container>\n      <Modal className=\"custom-dialog\" isOpen={modalIsOpen}>\n        <Container className=\"container-dialog\">\n          <h3 style={{textAlign:\"center\", fontSize: 22}}>Alterar Registro</h3>\n          <OwnerForm\n            ownerNameUpdate={ownerName}\n            ownerCpfUpdate={ownerCpf}\n            ownerDataUpdate={ownerData}\n            ownerSexoUpdate={ownerSexo}\n            checkedMale={checkedMale}\n            checkedFemale={checkedFemale}\n            operationType={\"Atualizar\"}\n            updateOwner={updateOwner}\n          />\n\n          <a className=\"link\"\n            class=\"fas fa-times text-danger ml-3 mb-1\"\n            style={{ height: 50, fontSize: 40 }}\n            onClick={() => setModalIsOpen(false)}\n          ></a>\n        </Container>\n      </Modal>\n\n      <Container>\n        <Row className=\"mb-5\">\n          <input\n            type=\"text\"\n            style={{ width: \"30%\" }}\n            className=\"ml-0\"\n            placeholder=\"Informe o CPF\"\n            onChange={(e) => {\n              setOwnerCpf(e.target.value);\n            }}\n          />\n          <Button variant=\"white\" onClick={handleGetOwnerByCpf}>\n            <i class=\"fas fa-search text-info\"></i>\n          </Button>\n        </Row>\n      </Container>\n\n      <Row className=\"bg-light\">\n        <Col>\n          <p>Nome</p>\n        </Col>\n        <Col>\n          <p>CPF</p>\n        </Col>\n        <Col>\n          <p>Data Nascimento</p>\n        </Col>\n        <Col>\n          <p>Sexo</p>\n        </Col>\n        <Col>\n          <p>Deletar</p>\n        </Col>\n        <Col>\n          <p>Editar</p>\n        </Col>\n      </Row>\n\n      {owners.map((value) => {\n        cont++;\n        if (cont % 2 == 0) {\n          bg = \"bg-light\";\n        } else {\n          bg = \"bg-withe\";\n        }\n        var date = new Date(value.data_nascimento);\n        var formattedDate = format(date, \"dd/MM/yyyy\");\n\n        return (\n          <div className=\"form\">\n            <Row className={bg}>\n              <Col>\n                <p>{value.nome}</p>\n              </Col>\n              <Col>\n                <p>{value.cpf}</p>\n              </Col>\n              <Col>\n                <p>{formattedDate}</p>\n              </Col>\n              <Col>\n                <p>{value.sexo}</p>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => {\n                    deleteOwner(value.cpf);\n                  }}\n                >\n                  <i class=\"fas fa-trash-alt\"></i>\n                </Button>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"info\"\n                  onClick={() => {\n                    setModalIsOpen(true);\n                    setOwnerValues(value);\n                  }}\n                >\n                  <i class=\"fas fa-edit\"></i>\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default OwnerList;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerComponent.jsx",["91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport OwnerList from \"./OwnerList\";\nimport OwnerForm from \"./OwnerForm\";\n\nconst OwnerComponent = () => {\n  const [ownerList, setOwnerList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n  const submitOwner = (name, cpf, data, sexo) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setOwnerList([\n      ...ownerList,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  const deleteOwner = (cpf) => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const getOwnerByCpf = (cpf) => {\n    console.log(\"cpf -> \" + cpf);\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter((owner) => owner.cpf == cpf);\n      setOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n        setOwnerList(response.data);\n      });\n    }\n  };\n\n  const updateOwner = (name, cpf, data, sexo) => {\n    Axios.put(`http://localhost:3000/v1/owners/${cpf}`, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner atualizado com sucesso!\");\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n    setOwnerList([\n      ...newOwners,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <OwnerForm\n        submitOwner={submitOwner}\n        updateOwner={updateOwner}\n        operationType={\"Cadastrar\"}\n      />\n      <OwnerList\n        owners={ownerList}\n        updateOwner={updateOwner}\n        deleteOwner={deleteOwner}\n        getOwnerByCpf={getOwnerByCpf}\n      />\n    </>\n  );\n};\n\nexport default OwnerComponent;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerForm.jsx",["94","95","96"],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Header.jsx",[],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/Footer.jsx",[],"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetComponent.jsx",["97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PetForm from \"./PetForm\";\nimport PetList from \"./PetList\";\n\nconst PetComponent = () => {\n  const [petList, setpetList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/pets\").then((response) => {\n      setpetList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,petsexo);\n  const submitPet = (name, tipoAnimal, data, sexo, raca) => {\n    Axios.post(\"http://localhost:3000/v1/pets\", {\n      tipo_animal: tipoAnimal,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n      raca: raca,\n    });\n\n    alert(\"Pet cadastrado com sucesso!\");\n\n    setpetList([\n      ...petList,\n      {\n        tipo_animal: tipoAnimal,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n        raca: raca,\n      },\n    ]);\n  };\n\n  const deletePet = (id) => {\n    Axios.delete(`http://localhost:3000/v1/pets/${id}`);\n\n    const newpets = petList.filter((pet) => pet.id != id);\n    setpetList(newpets);\n  };\n\n  const getPetById = (id) => {\n    if (!!id) {\n      const pet = petList.filter((pet) => pet.id == id);\n      setpetList(pet);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/pets\").then((response) => {\n        setpetList(response.data);\n      });\n    }\n  };\n\n  const updatePet = (id, name, data, sexo, tipoAnimal, raca) => {\n    Axios.put(`http://localhost:3000/v1/pets/${id}`, {\n      tipo_animal: tipoAnimal,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n      raca: raca,\n    });\n\n    alert(\"Pet atualizado com sucesso!\");\n    const newpets = petList.filter((pet) => pet.id != id);\n    setpetList(newpets);\n    setpetList([\n      ...newpets,\n      {\n        tipo_animal: tipoAnimal,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n        raca: raca,\n      },\n    ]);\n  };\n  return (\n    <>\n      <PetForm\n        submitPet={submitPet}\n        updatePet={updatePet}\n        operationType={\"Cadastrar\"}\n      />\n      <PetList\n        pets={petList}\n        updatePet={updatePet}\n        deletePet={deletePet}\n        getPetById={getPetById}\n      />\n    </>\n  );\n};\n\nexport default PetComponent;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetForm.jsx",["100","101","102","103"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst PetForm = ({\n  submitPet,\n  petNameUpdate,\n  petRacaUpdate,\n  petTipoAnimalUpdate,\n  petDataUpdate,\n  petSexoUpdate,\n  petIdUpdate,\n  operationType,\n  updatePet,\n  checkedFemale,\n  checkedMale,\n}) => {\n  const [operation, setOperationType] = useState(operationType);\n  const [petName, setPetName] = useState(petNameUpdate);\n  const [petRaca, setPetRaca] = useState(petRacaUpdate);\n  const [petData, setPetData] = useState(petDataUpdate);\n  const [petSexo, setPetSexo] = useState(petSexoUpdate);\n  const [petId, setPetId] = useState(petIdUpdate);\n  const [petTipoAnimal, setPetTipoAnimal] = useState(petTipoAnimalUpdate);\n\n  const handleSubmitPet = () => {\n    submitPet(petName, petTipoAnimal, petData, petSexo, petRaca);\n  };\n\n  const handleUpdatePet = () => {\n    console.log(\"petId -> \" + petId);\n    updatePet(petId, petName, petData, petSexo, petTipoAnimal, petRaca);\n  };\n\n  const handleOperationSubmit = () => {\n    if (operation == \"Cadastrar\") {\n      handleSubmitPet();\n    } else if (operation == \"Atualizar\") {\n      handleUpdatePet();\n    }\n  };\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }}>\n            <Jumbotron className=\"bg-white\">\n              <Form>\n                <Form.Group>\n                  <Form.Label>Nome do Pet</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"petName\"\n                    value={petName}\n                    onChange={(e) => {\n                      setPetName(e.target.value);\n                    }}\n                  />\n                </Form.Group>\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Raça</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"petRaca\"\n                        value={petRaca}\n                        onChange={(e) => {\n                          setPetRaca(e.target.value);\n                        }}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Data de Nascimento</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"ownerData\"\n                        value={petData}\n                        onChange={(e) => {\n                          setPetData(e.target.value);\n                        }}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Form.Group as={Col} controlId=\"formGridTypeAnimal\">\n                    <Form.Label>Tipo de Animal</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      onChange={(e) => {\n                        setPetTipoAnimal(e.target.value);\n                      }}\n                      defaultValue={petTipoAnimal}\n                    >\n                      <option>Escolha...</option>\n                      <option value=\"1\">Cachorro</option>\n                      <option value=\"2\">Gato</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Row>\n\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridSex\">\n                    <Form.Label>Sexo</Form.Label>\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"Macho\"\n                      name=\"formHoriRadios\"\n                      ids=\"formHoriRadios1\"\n                      value=\"M\"\n                      checked={checkedMale}\n                      onChange={(e) => {\n                        setPetSexo(e.target.value);\n                      }}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"Fêmea\"\n                      name=\"formHoriRadios\"\n                      ids=\"formHoriRadios1\"\n                      value=\"F\"\n                      checked={checkedFemale}\n                      onChange={(e) => {\n                        setPetSexo(e.target.value);\n                      }}\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Button\n                  variant=\"info\"\n                  type=\"submit\"\n                  onClick={handleOperationSubmit}\n                >\n                  {operation}\n                </Button>\n              </Form>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default PetForm;\n","/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/pets/PetList.jsx",["104","105","106","107","108"],"import React, { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-modal\";\nimport \"./Dialog.css\";\nimport PetForm from \"./PetForm\";\n\nconst PetList = ({ pets, updatePet, deletePet, getPetById }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [petName, setPetName] = useState(\"\");\n  const [petRaca, setPetRaca] = useState(\"\");\n  const [petData, setPetData] = useState(\"\");\n  const [petSexo, setPetSexo] = useState(\"\");\n  const [petTipoAnimalUpdate, setPetTipoAnimalUpdate] = useState(\"\");\n  const [petId, setPetId] = useState(\"\");\n  const [checkedMale, setCheckedMale] = useState(false);\n  const [checkedFemale, setCheckedFemale] = useState(false);\n\n  const setPetValues = (value) => {\n    setPetName(value.nome);\n    setPetRaca(value.raca);\n    setPetId(value.id);\n    var date = new Date(value.data_nascimento);\n    var formattedDate = format(date, \"yyyy-MM-dd\");\n    setPetData(formattedDate);\n    setPetSexo(value.sexo);\n    setPetTipoAnimalUpdate(value.tipo_animal);\n    if (value.sexo == \"M\") {\n      setCheckedMale(true);\n      setCheckedFemale(false);\n    } else {\n      setCheckedFemale(true);\n      setCheckedMale(false);\n    }\n  };\n\n  const handleGetPetById = () => {\n    getPetById(petId);\n  };\n\n  let bg = \"bg-light\";\n  let cont = 0;\n\n  return (\n    <Container>\n      <Modal className=\"custom-dialog\" isOpen={modalIsOpen}>\n        <Container className=\"container-dialog\">\n          <h3 style={{ textAlign: \"center\", fontSize: 22 }}>\n            Alterar Registro\n          </h3>\n          <PetForm\n            petNameUpdate={petName}\n            petRacaUpdate={petRaca}\n            petDataUpdate={petData}\n            petSexoUpdate={petSexo}\n            petTipoAnimalUpdate={petTipoAnimalUpdate}\n            petIdUpdate={petId}\n            checkedMale={checkedMale}\n            checkedFemale={checkedFemale}\n            operationType={\"Atualizar\"}\n            updatePet={updatePet}\n          />\n\n          <a\n            className=\"link\"\n            class=\"fas fa-times text-danger ml-3 mb-1\"\n            style={{ height: 50, fontSize: 40 }}\n            onClick={() => setModalIsOpen(false)}\n          ></a>\n        </Container>\n      </Modal>\n\n      <Container>\n        <Row className=\"mb-5\">\n          <input\n            type=\"text\"\n            style={{ width: \"30%\" }}\n            className=\"ml-0\"\n            placeholder=\"Informe o ID\"\n            onChange={(e) => {\n              setPetId(e.target.value);\n            }}\n          />\n          <Button variant=\"white\" onClick={handleGetPetById}>\n            <i class=\"fas fa-search text-info\"></i>\n          </Button>\n        </Row>\n      </Container>\n\n      <Row className=\"bg-light\">\n        <Col>\n          <p>ID</p>\n        </Col>\n        <Col>\n          <p>Nome</p>\n        </Col>\n        <Col>\n          <p>Tipo</p>\n        </Col>\n        <Col>\n          <p>Raça</p>\n        </Col>\n        <Col>\n          <p>Data Nascimento</p>\n        </Col>\n        <Col>\n          <p>Sexo</p>\n        </Col>\n        <Col>\n          <p>Deletar</p>\n        </Col>\n        <Col>\n          <p>Editar</p>\n        </Col>\n      </Row>\n\n      {pets.map((value) => {\n        cont++;\n        if (cont % 2 == 0) {\n          bg = \"bg-light\";\n        } else {\n          bg = \"bg-withe\";\n        }\n        var date = new Date(value.data_nascimento);\n        var formattedDate = format(date, \"dd/MM/yyyy\");\n        var tipoAnimal;\n\n        if(value.tipo_animal == 1 ){\n            tipoAnimal = \"Cachorro\";\n        } else {\n            tipoAnimal = \"Gato\";\n        }\n\n        return (\n          <div className=\"form\">\n            <Row className={bg}>\n              <Col>\n                <p>{value.id}</p>\n              </Col>\n              <Col>\n                <p>{value.nome}</p>\n              </Col>\n              <Col>\n                <p>{tipoAnimal}</p>\n              </Col>\n              <Col>\n                <p>{value.raca}</p>\n              </Col>\n              <Col>\n                <p>{formattedDate}</p>\n              </Col>\n              <Col>\n                <p>{value.sexo}</p>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => {\n                    deletePet(value.id);\n                  }}\n                >\n                  <i class=\"fas fa-trash-alt\"></i>\n                </Button>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"info\"\n                  onClick={() => {\n                    setModalIsOpen(true);\n                    setPetValues(value);\n                  }}\n                >\n                  <i class=\"fas fa-edit\"></i>\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default PetList;\n",{"ruleId":"109","severity":1,"message":"110","line":50,"column":61,"nodeType":"111","messageId":"112","endLine":50,"endColumn":63},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"109","severity":1,"message":"119","line":32,"column":22,"nodeType":"111","messageId":"112","endLine":32,"endColumn":24},{"ruleId":"113","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"109","severity":1,"message":"119","line":27,"column":20,"nodeType":"111","messageId":"112","endLine":27,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":59,"column":11,"nodeType":"124","endLine":63,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":59,"column":11,"nodeType":"124","endLine":63,"endColumn":12},{"ruleId":"109","severity":1,"message":"119","line":107,"column":22,"nodeType":"111","messageId":"112","endLine":107,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":39,"column":61,"nodeType":"111","messageId":"112","endLine":39,"endColumn":63},{"ruleId":"109","severity":1,"message":"119","line":47,"column":59,"nodeType":"111","messageId":"112","endLine":47,"endColumn":61},{"ruleId":"109","severity":1,"message":"110","line":65,"column":61,"nodeType":"111","messageId":"112","endLine":65,"endColumn":63},{"ruleId":"127","severity":1,"message":"128","line":20,"column":21,"nodeType":"129","messageId":"130","endLine":20,"endColumn":37},{"ruleId":"109","severity":1,"message":"119","line":35,"column":19,"nodeType":"111","messageId":"112","endLine":35,"endColumn":21},{"ruleId":"109","severity":1,"message":"119","line":37,"column":26,"nodeType":"111","messageId":"112","endLine":37,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":41,"column":52,"nodeType":"111","messageId":"112","endLine":41,"endColumn":54},{"ruleId":"109","severity":1,"message":"119","line":47,"column":50,"nodeType":"111","messageId":"112","endLine":47,"endColumn":52},{"ruleId":"109","severity":1,"message":"110","line":66,"column":52,"nodeType":"111","messageId":"112","endLine":66,"endColumn":54},{"ruleId":"127","severity":1,"message":"128","line":22,"column":21,"nodeType":"129","messageId":"130","endLine":22,"endColumn":37},{"ruleId":"127","severity":1,"message":"131","line":27,"column":17,"nodeType":"129","messageId":"130","endLine":27,"endColumn":25},{"ruleId":"109","severity":1,"message":"119","line":40,"column":19,"nodeType":"111","messageId":"112","endLine":40,"endColumn":21},{"ruleId":"109","severity":1,"message":"119","line":42,"column":26,"nodeType":"111","messageId":"112","endLine":42,"endColumn":28},{"ruleId":"109","severity":1,"message":"119","line":31,"column":20,"nodeType":"111","messageId":"112","endLine":31,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":67,"column":11,"nodeType":"124","endLine":72,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":67,"column":11,"nodeType":"124","endLine":72,"endColumn":12},{"ruleId":"109","severity":1,"message":"119","line":122,"column":22,"nodeType":"111","messageId":"112","endLine":122,"endColumn":24},{"ruleId":"109","severity":1,"message":"119","line":131,"column":30,"nodeType":"111","messageId":"112","endLine":131,"endColumn":32},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"Expected '===' and instead saw '=='.",["132"],["133"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'setOperationType' is assigned a value but never used.","Identifier","unusedVar","'setPetId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]