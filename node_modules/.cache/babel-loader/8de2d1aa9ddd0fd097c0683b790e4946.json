{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Header from \"./components/Header\";\nimport OwnerComponent from \"./components/OwnerComponent\";\nimport OwnerList from \"./components/OwnerList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [ownerName, setOwnerName] = useState(\"\");\n  // const [ownerCpf, setOwnerCpf] = useState(\"\");\n  // const [ownerData, setOwnerData] = useState(\"\");\n  // const [ownerSexo, setOwnerSexo] = useState(\"\");\n  const [ownerList, setOwnerList] = useState([]); // const [newOwner, setNewOwner] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n      setOwnerList(response.data);\n    });\n  }, []); // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n\n  const submitOwner = (name, cpf, data, sexo) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    });\n    alert(\"Owner cadastrado com sucesso!\");\n    setOwnerList([...ownerList, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    }]);\n  };\n\n  const deleteOwner = cpf => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n    const newOwners = ownerList.filter(owner => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const getOwnerByCpf = cpf => {\n    console.log(\"cpf -> \" + cpf);\n\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter(owner => owner.cpf == cpf);\n      setOwnerList(owner);\n    } else {\n      setOwnerList([...ownerList, {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo\n      }]);\n    }\n  };\n\n  const updateOwner = (name, cpf, data, sexo) => {\n    Axios.put(`http://localhost:3000/v1/owners/${cpf}`, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    });\n    alert(\"Owner atualizado com sucesso!\");\n    const newOwners = ownerList.filter(owner => owner.cpf != cpf);\n    setOwnerList(newOwners);\n    setOwnerList([...newOwners, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OwnerComponent, {\n      submitOwner: submitOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OwnerList, {\n      owners: ownerList,\n      updateOwner: updateOwner,\n      deleteOwner: deleteOwner,\n      getOwnerByCpf: getOwnerByCpf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3Ro6/v2CJbzeaWta4mM7MUWUBjQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brunoliberali/ReactProjects/pet_api_frontend/src/App.jsx"],"names":["React","useState","useEffect","Axios","Header","OwnerComponent","OwnerList","App","ownerList","setOwnerList","get","then","response","data","submitOwner","name","cpf","sexo","post","nome","data_nascimento","alert","deleteOwner","delete","newOwners","filter","owner","getOwnerByCpf","console","log","updateOwner","put"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Header from \"./components/Header\";\nimport OwnerComponent from \"./components/OwnerComponent\";\nimport OwnerList from \"./components/OwnerList\";\n\nfunction App() {\n  // const [ownerName, setOwnerName] = useState(\"\");\n  // const [ownerCpf, setOwnerCpf] = useState(\"\");\n  // const [ownerData, setOwnerData] = useState(\"\");\n  // const [ownerSexo, setOwnerSexo] = useState(\"\");\n\n  const [ownerList, setOwnerList] = useState([]);\n\n  // const [newOwner, setNewOwner] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n  const submitOwner = (name, cpf, data, sexo) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setOwnerList([\n      ...ownerList,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  const deleteOwner = (cpf) => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const getOwnerByCpf = (cpf) => {\n    console.log(\"cpf -> \" + cpf);\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter((owner) => owner.cpf == cpf);\n      setOwnerList(owner);\n    } else {\n      setOwnerList([\n        ...ownerList,\n        {\n          cpf: cpf,\n          nome: name,\n          data_nascimento: data,\n          sexo: sexo,\n        },\n      ]);\n    }\n  };\n\n  const updateOwner = (name, cpf, data, sexo) => {\n    Axios.put(`http://localhost:3000/v1/owners/${cpf}`, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner atualizado com sucesso!\");\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n    setOwnerList([\n      ...newOwners,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <OwnerComponent submitOwner={submitOwner} />\n      <OwnerList\n        owners={ownerList}\n        updateOwner={updateOwner}\n        deleteOwner={deleteOwner}\n        getOwnerByCpf={getOwnerByCpf}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}