{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport OwnerList from \"./OwnerList\";\nimport OwnerForm from \"./OwnerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OwnerComponent = () => {\n  _s();\n\n  const [ownerList, setOwnerList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n      setOwnerList(response.data);\n    });\n  }, []); // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n\n  const submitOwner = (name, cpf, data, sexo) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    });\n    alert(\"Owner cadastrado com sucesso!\");\n    setOwnerList([...ownerList, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    }]);\n  };\n\n  const deleteOwner = cpf => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n    const newOwners = ownerList.filter(owner => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const getOwnerByCpf = cpf => {\n    console.log(\"cpf -> \" + cpf);\n\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter(owner => owner.cpf == cpf);\n      setOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n        setOwnerList(response.data);\n      });\n    }\n  };\n\n  const updateOwner = (name, cpf, data, sexo) => {\n    Axios.put(`http://localhost:3000/v1/owners/${cpf}`, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    });\n    alert(\"Owner atualizado com sucesso!\");\n    const newOwners = ownerList.filter(owner => owner.cpf != cpf);\n    setOwnerList(newOwners);\n    setOwnerList([...newOwners, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OwnerForm, {\n      submitOwner: submitOwner // ownerNameUpdate={ownerNameUpdate}\n      // ownerCpfUpdate={ownerCpfUpdate}\n      // ownerDataUpdate={ownerDataUpdate}\n      // ownerSexoUpdate={ownerSexoUpdate}\n      ,\n      updateOwner: updateOwner,\n      operationType: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OwnerList, {\n      owners: owners,\n      updateOwner: updateOwner,\n      deleteOwner: deleteOwner,\n      getOwnerByCpf: getOwnerByCpf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OwnerComponent, \"3Ro6/v2CJbzeaWta4mM7MUWUBjQ=\");\n\n_c = OwnerComponent;\nexport default OwnerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnerComponent\");","map":{"version":3,"sources":["/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/owner/OwnerComponent.jsx"],"names":["React","useState","useEffect","Axios","OwnerList","OwnerForm","OwnerComponent","ownerList","setOwnerList","get","then","response","data","submitOwner","name","cpf","sexo","post","nome","data_nascimento","alert","deleteOwner","delete","newOwners","filter","owner","getOwnerByCpf","console","log","updateOwner","put","owners"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport OwnerList from \"./OwnerList\";\nimport OwnerForm from \"./OwnerForm\";\n\nconst OwnerComponent = () => {\n  const [ownerList, setOwnerList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n  const submitOwner = (name, cpf, data, sexo) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setOwnerList([\n      ...ownerList,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  const deleteOwner = (cpf) => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const getOwnerByCpf = (cpf) => {\n    console.log(\"cpf -> \" + cpf);\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter((owner) => owner.cpf == cpf);\n      setOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n        setOwnerList(response.data);\n      });\n    }\n  };\n\n  const updateOwner = (name, cpf, data, sexo) => {\n    Axios.put(`http://localhost:3000/v1/owners/${cpf}`, {\n      cpf: cpf,\n      nome: name,\n      data_nascimento: data,\n      sexo: sexo,\n    });\n\n    alert(\"Owner atualizado com sucesso!\");\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n    setOwnerList([\n      ...newOwners,\n      {\n        cpf: cpf,\n        nome: name,\n        data_nascimento: data,\n        sexo: sexo,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <OwnerForm\n        submitOwner={submitOwner}\n        // ownerNameUpdate={ownerNameUpdate}\n        // ownerCpfUpdate={ownerCpfUpdate}\n        // ownerDataUpdate={ownerDataUpdate}\n        // ownerSexoUpdate={ownerSexoUpdate}\n        updateOwner={updateOwner}\n        operationType={\"Cadastrar\"}\n      />\n      <OwnerList\n        owners={owners}\n        updateOwner={updateOwner}\n        deleteOwner={deleteOwner}\n        getOwnerByCpf={getOwnerByCpf}\n      />\n    </>\n  );\n};\n\nexport default OwnerComponent;\n"]},"metadata":{},"sourceType":"module"}