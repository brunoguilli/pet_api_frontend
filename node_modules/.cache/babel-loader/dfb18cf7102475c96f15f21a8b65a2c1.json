{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerList.jsx\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OwnerList = ({\n  owners\n}) => {\n  // {ownerList.map((value) => {\n  //     return (\n  //       <div className=\"card\">\n  //         <h1>{value.nome}</h1>\n  //         <p>{value.cpf} </p>\n  //         <button\n  //           onClick={() => {\n  //             deleteOwner(value.cpf);\n  //           }}\n  //         >\n  //           Delete\n  //         </button>\n  //         <input\n  //           type=\"text\"\n  //           id=\"updateInput\"\n  //           onChange={(e) => {\n  //             setNewOwner(e.target.value);\n  //           }}\n  //         />\n  //         <button>Update</button>\n  //       </div>\n  //     );\n  //   })}\n  let bg = \"bg-light\";\n  let cont = 0;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"CPF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Data Nascimento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sexo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), owners.map(value => {\n      cont++;\n\n      if (cont % 2 == 0) {\n        bg = \"bg-light\";\n      } else {\n        bg = \"bg-withe\";\n      }\n\n      var dateFormat = require('dateformat');\n\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: bg,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value.cpf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dateFormat(value.data_nascimento, \"dd/mmmm/yyyy\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value.sexo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OwnerList;\nexport default OwnerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnerList\");","map":{"version":3,"sources":["/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/src/components/OwnerList.jsx"],"names":["React","Row","Col","Container","OwnerList","owners","bg","cont","map","value","dateFormat","require","nome","cpf","data_nascimento","sexo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAChC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIC,EAAE,GAAG,UAAT;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,GAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,GAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAgBGF,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACrBF,MAAAA,IAAI;;AACJ,UAAIA,IAAI,GAAG,CAAP,IAAY,CAAhB,EAAmB;AACjBD,QAAAA,EAAE,GAAG,UAAL;AACD,OAFD,MAEO;AACLA,QAAAA,EAAE,GAAG,UAAL;AACD;;AACD,UAAII,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,0BAEE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEL,EAAhB;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE;AAAA,sBAAIG,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAA,iCACE;AAAA,sBAAIH,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,GAAD;AAAA,iCACE;AAAA,sBAAIH,UAAU,CAACD,KAAK,CAACK,eAAP,EAAwB,cAAxB;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,GAAD;AAAA,iCACE;AAAA,sBAAIL,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAiBD,KAzBA,CAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAxED;;KAAMX,S;AA0EN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nconst OwnerList = ({ owners }) => {\n  // {ownerList.map((value) => {\n  //     return (\n  //       <div className=\"card\">\n  //         <h1>{value.nome}</h1>\n  //         <p>{value.cpf} </p>\n\n  //         <button\n  //           onClick={() => {\n  //             deleteOwner(value.cpf);\n  //           }}\n  //         >\n  //           Delete\n  //         </button>\n  //         <input\n  //           type=\"text\"\n  //           id=\"updateInput\"\n  //           onChange={(e) => {\n  //             setNewOwner(e.target.value);\n  //           }}\n  //         />\n  //         <button>Update</button>\n  //       </div>\n  //     );\n  //   })}\n  let bg = \"bg-light\";\n  let cont = 0;\n  return (\n    <Container>\n      <Row className=\"bg-light\">\n        <Col>\n          <p>Nome</p>\n        </Col>\n        <Col>\n          <p>CPF</p>\n        </Col>\n        <Col>\n          <p>Data Nascimento</p>\n        </Col>\n        <Col>\n          <p>Sexo</p>\n        </Col>\n      </Row>\n\n      {owners.map((value) => {\n        cont++;\n        if (cont % 2 == 0) {\n          bg = \"bg-light\";\n        } else {\n          bg = \"bg-withe\";\n        }\n        var dateFormat = require('dateformat');\n        return (\n            \n          <Row className={bg}>\n            <Col>\n              <p>{value.nome}</p>\n            </Col>\n            <Col>\n              <p>{value.cpf}</p>\n            </Col>\n            <Col>\n              <p>{dateFormat(value.data_nascimento, \"dd/mmmm/yyyy\")}</p>\n            </Col>\n            <Col>\n              <p>{value.sexo}</p>\n            </Col>\n          </Row>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default OwnerList;\n"]},"metadata":{},"sourceType":"module"}