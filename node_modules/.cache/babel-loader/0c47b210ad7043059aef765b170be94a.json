{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PetOwnerForm from \"./PetOwnerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PetOwnerComponent = () => {\n  _s();\n\n  const [petOwnerList, setPetOwnerList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/petowners\").then(response => {\n      setPetOwnerList(response.data);\n    });\n  }, []); // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n\n  const submitPetOwner = (id, owner_id, pet_id) => {\n    Axios.post(\"http://localhost:3000/v1/petowners\", {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    });\n    alert(\"Owner cadastrado com sucesso!\");\n    setPetOwnerList([...petOwnerList, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    }]);\n  };\n\n  const deletePetOwner = id => {\n    Axios.delete(`http://localhost:3000/v1/petowners/${id}`);\n    const newPetOwners = petOwnerList.filter(petOwner => petOwner.id != id);\n    setPetOwnerList(newPetOwners);\n  };\n\n  const getOwnerByCpf = cpf => {\n    console.log(\"cpf -> \" + cpf);\n\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter(owner => owner.cpf == cpf);\n      setPetOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n        setPetOwnerList(response.data);\n      });\n    }\n  };\n\n  const updatePetOwner = (id, owner_id, pet_id) => {\n    Axios.put(`http://localhost:3000/v1/owners/${id}`, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    });\n    alert(\"Owner atualizado com sucesso!\");\n    const newPetOwners = petOwnerList.filter(opetOwner => opetOwner.id != id);\n    setPetOwnerList(newPetOwners);\n    setPetOwnerList([...newPetOwners, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PetOwnerForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 11\n  }, this);\n};\n\n_s(PetOwnerComponent, \"XUWSrWV3+AUItMSl1YXj7CsOXYg=\");\n\n_c = PetOwnerComponent;\nexport default PetOwnerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetOwnerComponent\");","map":{"version":3,"sources":["/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerComponent.jsx"],"names":["React","useState","useEffect","Axios","PetOwnerForm","PetOwnerComponent","petOwnerList","setPetOwnerList","get","then","response","data","submitPetOwner","id","owner_id","pet_id","post","alert","deletePetOwner","delete","newPetOwners","filter","petOwner","getOwnerByCpf","cpf","console","log","owner","ownerList","updatePetOwner","put","opetOwner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PetOwnerForm from \"./PetOwnerForm\";\n\nconst PetOwnerComponent = () => {\n  const [petOwnerList, setPetOwnerList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/petowners\").then((response) => {\n      setPetOwnerList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n  const submitPetOwner = (id, owner_id, pet_id) => {\n    Axios.post(\"http://localhost:3000/v1/petowners\", {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setPetOwnerList([\n      ...petOwnerList,\n      {\n        id: id,\n        owner_id: owner_id,\n        pet_id: pet_id,\n      },\n    ]);\n  };\n\n  const deletePetOwner = (id) => {\n    Axios.delete(`http://localhost:3000/v1/petowners/${id}`);\n\n    const newPetOwners = petOwnerList.filter((petOwner) => petOwner.id != id);\n    setPetOwnerList(newPetOwners);\n  };\n\n  const getOwnerByCpf = (cpf) => {\n    console.log(\"cpf -> \" + cpf);\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = ownerList.filter((owner) => owner.cpf == cpf);\n      setPetOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n        setPetOwnerList(response.data);\n      });\n    }\n  };\n\n  const updatePetOwner = (id, owner_id, pet_id) => {\n    Axios.put(`http://localhost:3000/v1/owners/${id}`, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id,\n    });\n\n    alert(\"Owner atualizado com sucesso!\");\n    const newPetOwners = petOwnerList.filter((opetOwner) => opetOwner.id != id);\n    setPetOwnerList(newPetOwners);\n    setPetOwnerList([\n      ...newPetOwners,\n      {\n        id: id,\n        owner_id: owner_id,\n        pet_id: pet_id,\n      },\n    ]);\n  };\n\n  return (<PetOwnerForm />);\n};\n\nexport default PetOwnerComponent;\n"]},"metadata":{},"sourceType":"module"}