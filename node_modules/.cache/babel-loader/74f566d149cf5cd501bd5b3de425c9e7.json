{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ownerName, setOwnerName] = useState(\"\");\n  const [ownerCpf, setOwnerCpf] = useState(\"\");\n  const [ownerData, setOwnerData] = useState(\"\");\n  const [ownerSexo, setOwnerSexo] = useState(\"\");\n  const [ownerList, setOwnerList] = useState([]);\n  const [newOwner, setNewOwner] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  const submitOwner = () => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo\n    });\n    alert(\"Owner cadastrado com sucesso!\");\n    setOwnerList([...ownerList, {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo\n    }]);\n  };\n\n  const deleteOwner = cpf => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n    const newOwners = ownerList.filter(owner => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const updateOwner = owner => {\n    Axios.put(\"http://localhost:3000/v1/owners/\", {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo\n    });\n    setNewOwner(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD APPLICATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"ownerForm\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), ownerList.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: value.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [value.cpf, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteOwner(value.cpf);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewOwner(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9RnYQcHABB4bfIwMigchyj3K/6w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/client/src/App.js"],"names":["React","useState","useEffect","Axios","App","ownerName","setOwnerName","ownerCpf","setOwnerCpf","ownerData","setOwnerData","ownerSexo","setOwnerSexo","ownerList","setOwnerList","newOwner","setNewOwner","get","then","response","data","submitOwner","post","cpf","nome","data_nascimento","sexo","alert","deleteOwner","delete","newOwners","filter","owner","updateOwner","put","map","value","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [ownerName, setOwnerName] = useState(\"\");\n  const [ownerCpf, setOwnerCpf] = useState(\"\");\n  const [ownerData, setOwnerData] = useState(\"\");\n  const [ownerSexo, setOwnerSexo] = useState(\"\");\n  const [ownerList, setOwnerList] = useState([]);\n\n  const [newOwner, setNewOwner] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  const submitOwner = () => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setOwnerList([\n      ...ownerList,\n      {\n        cpf: ownerCpf,\n        nome: ownerName,\n        data_nascimento: ownerData,\n        sexo: ownerSexo,\n      },\n    ]);\n  };\n\n  const deleteOwner = (cpf) => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const updateOwner = (owner) => {\n    Axios.put(\"http://localhost:3000/v1/owners/\", {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo,\n    });\n\n    setNewOwner(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>CRUD APPLICATION</h1>\n      <div className=\"form\">\n        <ownerForm />\n\n        {ownerList.map((value) => {\n          return (\n            <div className=\"card\">\n              <h1>{value.nome}</h1>\n              <p>{value.cpf} </p>\n\n              <button\n                onClick={() => {\n                  deleteOwner(value.cpf);\n                }}\n              >\n                Delete\n              </button>\n              <input\n                type=\"text\"\n                id=\"updateInput\"\n                onChange={(e) => {\n                  setNewOwner(e.target.value);\n                }}\n              />\n              <button>Update</button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}