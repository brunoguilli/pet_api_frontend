{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport OwnerForm from \"./components/ownerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ownerList, setOwnerList] = useState([]);\n  const [newOwner, setNewOwner] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  const submitOwner = owner => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: owner.ownerCpf,\n      nome: owner.ownerName,\n      data_nascimento: owner.ownerData,\n      sexo: owner.ownerSexo\n    });\n    alert(\"Owner cadastrado com sucesso!\");\n    setOwnerList([...ownerList, {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo\n    }]);\n  };\n\n  const deleteOwner = cpf => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n    const newOwners = ownerList.filter(owner => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const updateOwner = owner => {\n    Axios.put(\"http://localhost:3000/v1/owners/\", {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo\n    });\n    setNewOwner(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD APPLICATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OwnerForm, {\n      submitOwner: submitOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: ownerList.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: value.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [value.cpf, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteOwner(value.cpf);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewOwner(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U27Mh2XZqpyLlUvdK6l0vT81gV0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brunoliberali/NodeJsProjects/pet_api_crud_front_end/client/src/App.js"],"names":["React","useState","useEffect","Axios","OwnerForm","App","ownerList","setOwnerList","newOwner","setNewOwner","get","then","response","data","submitOwner","owner","post","cpf","ownerCpf","nome","ownerName","data_nascimento","ownerData","sexo","ownerSexo","alert","deleteOwner","delete","newOwners","filter","updateOwner","put","map","value","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport OwnerForm from \"./components/ownerForm\";\n\nfunction App() {\n  const [ownerList, setOwnerList] = useState([]);\n\n  const [newOwner, setNewOwner] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n  }, []);\n\n  const submitOwner = (owner) => {\n    Axios.post(\"http://localhost:3000/v1/owners\", {\n      cpf: owner.ownerCpf,\n      nome: owner.ownerName,\n      data_nascimento: owner.ownerData,\n      sexo: owner.ownerSexo,\n    });\n\n    alert(\"Owner cadastrado com sucesso!\");\n\n    setOwnerList([\n      ...ownerList,\n      {\n        cpf: ownerCpf,\n        nome: ownerName,\n        data_nascimento: ownerData,\n        sexo: ownerSexo,\n      },\n    ]);\n  };\n\n  const deleteOwner = (cpf) => {\n    Axios.delete(`http://localhost:3000/v1/owners/${cpf}`);\n\n    const newOwners = ownerList.filter((owner) => owner.cpf != cpf);\n    setOwnerList(newOwners);\n  };\n\n  const updateOwner = (owner) => {\n    Axios.put(\"http://localhost:3000/v1/owners/\", {\n      cpf: ownerCpf,\n      nome: ownerName,\n      data_nascimento: ownerData,\n      sexo: ownerSexo,\n    });\n\n    setNewOwner(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>CRUD APPLICATION</h1>\n      <OwnerForm submitOwner={submitOwner}/>\n      <div className=\"form\">\n        \n        {ownerList.map((value) => {\n          return (\n            <div className=\"card\">\n              <h1>{value.nome}</h1>\n              <p>{value.cpf} </p>\n\n              <button\n                onClick={() => {\n                  deleteOwner(value.cpf);\n                }}\n              >\n                Delete\n              </button>\n              <input\n                type=\"text\"\n                id=\"updateInput\"\n                onChange={(e) => {\n                  setNewOwner(e.target.value);\n                }}\n              />\n              <button>Update</button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}