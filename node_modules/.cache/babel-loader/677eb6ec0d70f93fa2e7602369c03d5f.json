{"ast":null,"code":"var _jsxFileName = \"/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PetOwnerForm from \"./PetOwnerForm\";\nimport PetOwnerList from \"./PetOwnerList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PetOwnerComponent = () => {\n  _s();\n\n  const [petOwnerList, setPetOwnerList] = useState([]);\n  const [ownerList, setOwnerList] = useState([]);\n  const [petList, setPetList] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/petowners/name\").then(response => {\n      setPetOwnerList(response.data);\n    });\n    Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n      setOwnerList(response.data);\n    });\n    Axios.get(\"http://localhost:3000/v1/pets\").then(response => {\n      setPetList(response.data);\n    });\n  }, []); // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n\n  const submitPetOwner = (owner_id, pet_id) => {\n    Axios.post(\"http://localhost:3000/v1/petowners\", {\n      owner_id: owner_id,\n      pet_id: pet_id\n    });\n    alert(\"Vínculo cadastrado com sucesso!\");\n    setPetOwnerList([...petOwnerList, {\n      // id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    }]);\n  };\n\n  const deletePetOwner = id => {\n    Axios.delete(`http://localhost:3000/v1/petowners/${id}`);\n    const newPetOwners = petOwnerList.filter(petOwner => petOwner.id != id);\n    setPetOwnerList(newPetOwners);\n  };\n\n  const getOwnerByCpf = cpf => {\n    console.log(\"cpf -> \" + cpf);\n\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = petOwnerList.filter(owner => owner.cpf == cpf);\n      setPetOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then(response => {\n        setPetOwnerList(response.data);\n      });\n    }\n  };\n\n  const updatePetOwner = (id, owner_id, pet_id) => {\n    Axios.put(`http://localhost:3000/v1/owners/${id}`, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    });\n    alert(\"Owner atualizado com sucesso!\");\n    const newPetOwners = petOwnerList.filter(opetOwner => opetOwner.id != id);\n    setPetOwnerList(newPetOwners);\n    setPetOwnerList([...newPetOwners, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PetOwnerForm, {\n      submitPetOwner: submitPetOwner,\n      updatePetOwner: updatePetOwner,\n      operationType: \"Cadastrar\",\n      ownerList: ownerList,\n      petList: petList,\n      petOwnerList: petOwnerList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PetOwnerList, {\n      petOwnerList: petOwnerList,\n      deletePetOwner: deletePetOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PetOwnerComponent, \"w2X+651a0+bS0hiGR3uWuneTxeQ=\");\n\n_c = PetOwnerComponent;\nexport default PetOwnerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetOwnerComponent\");","map":{"version":3,"sources":["/Users/brunoliberali/ReactProjects/pet_api_frontend/src/components/PetOwner/PetOwnerComponent.jsx"],"names":["React","useState","useEffect","Axios","PetOwnerForm","PetOwnerList","PetOwnerComponent","petOwnerList","setPetOwnerList","ownerList","setOwnerList","petList","setPetList","get","then","response","data","submitPetOwner","owner_id","pet_id","post","alert","deletePetOwner","id","delete","newPetOwners","filter","petOwner","getOwnerByCpf","cpf","console","log","owner","updatePetOwner","put","opetOwner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PetOwnerForm from \"./PetOwnerForm\";\nimport PetOwnerList from \"./PetOwnerList\";\n\nconst PetOwnerComponent = () => {\n  const [petOwnerList, setPetOwnerList] = useState([]);\n  const [ownerList, setOwnerList] = useState([]);\n  const [petList, setPetList] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3000/v1/petowners/name\").then((response) => {\n      setPetOwnerList(response.data);\n    });\n    Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n      setOwnerList(response.data);\n    });\n    Axios.get(\"http://localhost:3000/v1/pets\").then((response) => {\n      setPetList(response.data);\n    });\n  }, []);\n\n  // submitOwner(ownerName,ownerCpf,ownerData,ownerSexo);\n  const submitPetOwner = (owner_id, pet_id) => {\n    Axios.post(\"http://localhost:3000/v1/petowners\", {\n      owner_id: owner_id,\n      pet_id: pet_id,\n    });\n\n    alert(\"Vínculo cadastrado com sucesso!\");\n\n    setPetOwnerList([\n      ...petOwnerList,\n      {\n        // id: id,\n        owner_id: owner_id,\n        pet_id: pet_id,\n      },\n    ]);\n  };\n\n  const deletePetOwner = (id) => {\n    Axios.delete(`http://localhost:3000/v1/petowners/${id}`);\n\n    const newPetOwners = petOwnerList.filter((petOwner) => petOwner.id != id);\n    setPetOwnerList(newPetOwners);\n  };\n\n  const getOwnerByCpf = (cpf) => {\n    console.log(\"cpf -> \" + cpf);\n    if (!!cpf) {\n      console.log(\"2cpf -> \" + cpf);\n      const owner = petOwnerList.filter((owner) => owner.cpf == cpf);\n      setPetOwnerList(owner);\n    } else {\n      Axios.get(\"http://localhost:3000/v1/owners\").then((response) => {\n        setPetOwnerList(response.data);\n      });\n    }\n  };\n\n  const updatePetOwner = (id, owner_id, pet_id) => {\n    Axios.put(`http://localhost:3000/v1/owners/${id}`, {\n      id: id,\n      owner_id: owner_id,\n      pet_id: pet_id,\n    });\n\n    alert(\"Owner atualizado com sucesso!\");\n    const newPetOwners = petOwnerList.filter((opetOwner) => opetOwner.id != id);\n    setPetOwnerList(newPetOwners);\n    setPetOwnerList([\n      ...newPetOwners,\n      {\n        id: id,\n        owner_id: owner_id,\n        pet_id: pet_id,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <PetOwnerForm\n        submitPetOwner={submitPetOwner}\n        updatePetOwner={updatePetOwner}\n        operationType={\"Cadastrar\"}\n        ownerList={ownerList}\n        petList={petList}\n        petOwnerList={petOwnerList}\n      />\n      <PetOwnerList\n        petOwnerList={petOwnerList}\n        deletePetOwner={deletePetOwner}\n      />\n    </>\n  );\n};\n\nexport default PetOwnerComponent;\n"]},"metadata":{},"sourceType":"module"}